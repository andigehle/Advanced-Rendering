// OpenGL input
struct vertexIN
{
  float4 position	: POSITION;
  float3 normal		: NORMAL;
};

// vertex program output
struct vertexOUT
{
  float4 cameraSpacePos : POSITION;
  float3 objectSpacePos : TEXCOORD1;
  float3 normal   : TEXCOORD2;
};

float4 stretch;

// OpenGL state
uniform float4x4 ModelViewProjection : state.matrix.mvp;

vertexOUT main(vertexIN vIn, uniform float stretchFactor)
{
  stretch = vIn.position;
  stretch.xyz += stretchFactor * vIn.normal;

  vertexOUT vOut;
  // project point onto screen
  vOut.cameraSpacePos = mul(ModelViewProjection, stretch);
  // copy position
  vOut.objectSpacePos = vIn.position.xyz;
  // copy Normal
  vOut.normal = vIn.normal;
  return vOut;
}

